# Frontier AI Processing Deployment
# Specialized deployment for AI/ML workloads

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontier-ai-processor
  namespace: production
  labels:
    app: frontier-ai
    version: v1
    tier: ai-processing
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: frontier-ai
      version: v1
  template:
    metadata:
      labels:
        app: frontier-ai
        version: v1
        tier: ai-processing
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: frontier-ai
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: frontier-ai
        image: frontier/ai-processor:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8001
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: AI_MODEL_PATH
          value: "/models"
        - name: BATCH_SIZE
          value: "32"
        - name: MAX_WORKERS
          value: "4"
        - name: GPU_ENABLED
          value: "false"  # Set to true if GPU nodes available
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
        volumeMounts:
        - name: model-cache
          mountPath: /models
        - name: ai-logs
          mountPath: /app/logs
      volumes:
      - name: model-cache
        emptyDir:
          sizeLimit: 10Gi
      - name: ai-logs
        emptyDir: {}
      nodeSelector:
        WorkloadType: compute-intensive
      tolerations:
      - key: "compute-intensive"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
# AI Processor HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontier-ai-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontier-ai-processor
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600  # Slower scale down for AI workloads
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
# AI Processor Service
apiVersion: v1
kind: Service
metadata:
  name: frontier-ai-service
  namespace: production
  labels:
    app: frontier-ai
    tier: ai-processing
spec:
  type: ClusterIP
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: http
  selector:
    app: frontier-ai
    version: v1

---
# AI ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontier-ai
  namespace: production
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/frontier-ai-role
