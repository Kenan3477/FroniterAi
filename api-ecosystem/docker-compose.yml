version: '3.8'

services:
  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for authentication and metadata
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: frontier_api
      POSTGRES_USER: frontier
      POSTGRES_PASSWORD: frontier_password_change_in_production
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U frontier -d frontier_api"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RabbitMQ for async job processing
  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: frontier
      RABBITMQ_DEFAULT_PASS: frontier_password_change_in_production
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build: ./gateway
    ports:
      - "3000:3000"
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://frontier:frontier_password_change_in_production@postgres:5432/frontier_api
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - NODE_ENV=development
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./gateway/config:/app/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # REST API Server
  rest-api:
    build: ./rest-api
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://frontier:frontier_password_change_in_production@postgres:5432/frontier_api
      - REDIS_URL=redis://redis:6379
      - FRONTIER_AI_ENDPOINT=http://frontier-core:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # GraphQL API Server
  graphql-api:
    build: ./graphql-api
    ports:
      - "3006:3006"
    environment:
      - DATABASE_URL=postgresql://frontier:frontier_password_change_in_production@postgres:5432/frontier_api
      - REDIS_URL=redis://redis:6379
      - FRONTIER_AI_ENDPOINT=http://frontier-core:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Authentication Service
  auth-service:
    build: ./auth
    ports:
      - "3008:3008"
    environment:
      - DATABASE_URL=postgresql://frontier:frontier_password_change_in_production@postgres:5432/frontier_api
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
      - REFRESH_TOKEN_EXPIRE_DAYS=30
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3008/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Documentation Portal
  docs-portal:
    build: ./docs-portal
    ports:
      - "3009:3009"
    environment:
      - API_BASE_URL=http://api-gateway:3000
    depends_on:
      api-gateway:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3009/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3010:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_change_in_production
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # UI
      - "14268:14268"  # HTTP collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  # Nginx for load balancing and SSL termination
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
      - docs-portal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # SDK Generator Service
  sdk-generator:
    build: ./sdk-generator
    ports:
      - "3011:3011"
    environment:
      - API_SPEC_URL=http://api-gateway:3000/api/openapi.json
    volumes:
      - ./sdks:/app/output/sdks
    depends_on:
      - api-gateway

  # Background Job Processor
  job-processor:
    build: ./job-processor
    environment:
      - RABBITMQ_URL=amqp://frontier:frontier_password_change_in_production@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://frontier:frontier_password_change_in_production@postgres:5432/frontier_api
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      replicas: 2

volumes:
  redis_data:
  postgres_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: frontier-api-network
